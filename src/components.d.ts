/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface DynComp {
    'value': string;
  }
  interface DynCompAttributes extends StencilHTMLAttributes {
    /**
    * Emitted when the input has been created.
    */
    'onDynCompDidLoad'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the input has been removed.
    */
    'onDynCompDidUnload'?: (event: CustomEvent<void>) => void;
    'value'?: string;
  }

  interface MyComponent {}
  interface MyComponentAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'DynComp': Components.DynComp;
    'MyComponent': Components.MyComponent;
  }

  interface StencilIntrinsicElements {
    'dyn-comp': Components.DynCompAttributes;
    'my-component': Components.MyComponentAttributes;
  }


  interface HTMLDynCompElement extends Components.DynComp, HTMLStencilElement {}
  var HTMLDynCompElement: {
    prototype: HTMLDynCompElement;
    new (): HTMLDynCompElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLElementTagNameMap {
    'dyn-comp': HTMLDynCompElement
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'dyn-comp': HTMLDynCompElement;
    'my-component': HTMLMyComponentElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
